{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/yt_icon.png';\nconst _hoisted_1 = {\n  class: \"main-content\"\n};\nconst _hoisted_2 = {\n  class: \"converter-container\"\n};\nconst _hoisted_3 = {\n  class: \"title\"\n};\nconst _hoisted_4 = {\n  class: \"description\"\n};\nconst _hoisted_5 = {\n  class: \"container\"\n};\nconst _hoisted_6 = {\n  class: \"input-wrapper\"\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_9 = {\n  class: \"converter-container-tip\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"container2\"\n};\nconst _hoisted_11 = {\n  class: \"video-card\"\n};\nconst _hoisted_12 = {\n  class: \"video-header\"\n};\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = {\n  class: \"title\"\n};\nconst _hoisted_15 = {\n  class: \"formats-title\"\n};\nconst _hoisted_16 = {\n  class: \"formats-title-tip\"\n};\nconst _hoisted_17 = {\n  class: \"formats-list\"\n};\nconst _hoisted_18 = {\n  class: \"format-details\"\n};\nconst _hoisted_19 = [\"href\"];\nconst _hoisted_20 = {\n  class: \"format-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 图标 \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"YouTube Icon\",\n    class: \"icon\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 标题 \"), _createElementVNode(\"h1\", _hoisted_3, _toDisplayString(_ctx.$t(\"title\")), 1 /* TEXT */), _createCommentVNode(\" 描述 \"), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_ctx.$t(\"description\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.yt_url = $event),\n    placeholder: \"https://www.youtube.com/watch?v=...\",\n    class: \"input-box\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.yt_url]]), _createElementVNode(\"button\", {\n    class: \"download-button2\",\n    disabled: $data.loading,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchFormats && $options.fetchFormats(...args))\n  }, _toDisplayString(_ctx.$t(\"download\")), 9 /* TEXT, PROPS */, _hoisted_7)])]), _createCommentVNode(\" 加载动画 \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n    class: \"bar\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"bar\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"bar\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_9, _toDisplayString(_ctx.$t(\"tip\")), 1 /* TEXT */)]), $data.videoData && $data.videoData?.title ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"img\", {\n    src: $data.videoData.thumbnail,\n    class: \"thumbnail\",\n    alt: \"Thumbnail\"\n  }, null, 8 /* PROPS */, _hoisted_13), _createElementVNode(\"h2\", _hoisted_14, _toDisplayString($data.videoData.title), 1 /* TEXT */)]), _createElementVNode(\"h3\", _hoisted_15, _toDisplayString(_ctx.$t(\"formats\")), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_16, _toDisplayString(_ctx.$t(\"formatsTip\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.videoData.formats, format => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: format.format_id,\n      class: \"format-item\"\n    }, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n      class: \"download-icon\"\n    }, \"⬇️\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"a\", {\n      href: format.url,\n      class: \"download-link\",\n      target: \"_blank\"\n    }, _toDisplayString($data.videoData.title) + \".\" + _toDisplayString(format.ext), 9 /* TEXT, PROPS */, _hoisted_19), _createElementVNode(\"span\", _hoisted_20, _toDisplayString(format.resolution || \"Audio Only\") + \" • \" + _toDisplayString((format.filesize / (1024 * 1024)).toFixed(2)) + \" MB\", 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","src","alt","_hoisted_3","_toDisplayString","_ctx","$t","_hoisted_4","_hoisted_5","_hoisted_6","type","_cache","$event","$data","yt_url","placeholder","disabled","loading","onClick","args","$options","fetchFormats","_hoisted_7","_hoisted_8","_hoisted_9","videoData","title","_hoisted_10","_hoisted_11","_hoisted_12","thumbnail","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_Fragment","_renderList","formats","format","format_id","_hoisted_18","href","url","target","ext","_hoisted_19","_hoisted_20","resolution","filesize","toFixed"],"sources":["/Users/jc/vue_workspace/youtube/yt-downloader/src/components/MainContent.vue"],"sourcesContent":["<template>\n  <main class=\"main-content\">\n    <div class=\"converter-container\">\n      <!-- 图标 -->\n      <div class=\"icon-container\">\n        <img src=\"@/assets/yt_icon.png\" alt=\"YouTube Icon\" class=\"icon\" />\n      </div>\n\n      <!-- 标题 -->\n      <h1 class=\"title\">{{ $t(\"title\") }}</h1>\n\n      <!-- 描述 -->\n      <p class=\"description\">\n        {{ $t(\"description\") }}\n      </p>\n\n      <div class=\"container\">\n        <div class=\"input-wrapper\">\n          <input type=\"text\" v-model=\"yt_url\" placeholder=\"https://www.youtube.com/watch?v=...\" class=\"input-box\" />\n          <button class=\"download-button2\" :disabled=\"loading\" @click=\"fetchFormats\">\n            {{ $t(\"download\") }}\n          </button>\n        </div>\n      </div>\n\n      <!-- 加载动画 -->\n    <div v-if=\"loading\" class=\"loading-indicator\">\n      <div class=\"bar\"></div>\n      <div class=\"bar\"></div>\n      <div class=\"bar\"></div>\n    </div>\n\n      <p class=\"converter-container-tip\">{{ $t(\"tip\") }}</p>\n    </div>\n\n    <div class=\"container2\" v-if=\"videoData && videoData?.title\">\n      <div class=\"video-card\">\n        <div class=\"video-header\">\n          <img :src=\"videoData.thumbnail\" class=\"thumbnail\" alt=\"Thumbnail\" />\n          <h2 class=\"title\">{{ videoData.title }}</h2>\n        </div>\n        <h3 class=\"formats-title\">{{ $t(\"formats\") }}</h3>\n        <p class=\"formats-title-tip\">{{ $t(\"formatsTip\") }}</p>\n        <div class=\"formats-list\">\n          <div v-for=\"format in videoData.formats\" :key=\"format.format_id\" class=\"format-item\">\n            <span class=\"download-icon\">⬇️</span>\n            <div class=\"format-details\">\n              <a :href=\"format.url\" class=\"download-link\" target=\"_blank\">\n                {{ videoData.title }}.{{ format.ext }}\n              </a>\n              <span class=\"format-info\">{{ format.resolution || \"Audio Only\" }} • {{ (format.filesize / (1024 * 1024)).toFixed(2) }} MB</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      yt_url: 'https://www.youtube.com/watch?v=39olCJI2TgQ', // 用来存储 YouTube 链接\n      videoData: {\n      },\n      loading: false\n    };\n  },\n  methods: {\n    download() {\n      alert(`Starting download for: ${this.url}`);\n    },\n    async downloadFile(link) {\n      try {\n        // 向后端发送请求下载文件\n        const response = await axios.get(link, {\n          responseType: 'blob'  // 设置返回类型为二进制流\n        });\n\n        // 创建一个临时链接，触发浏览器下载\n        const blob = response.data;\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const linkElement = document.createElement('a');\n        linkElement.href = downloadUrl;\n        linkElement.download = 'video.mp4';  // 可根据需要修改文件名\n        linkElement.click();\n\n        // 释放 URL 对象\n        window.URL.revokeObjectURL(downloadUrl);\n      } catch (error) {\n        console.error('下载失败:', error);\n        alert('下载失败，请稍后再试');\n      }\n    },\n\n    async fetchFormats() {\n      if (!this.yt_url) {\n        alert('请输入有效的 YouTube 视频 URL');\n        return;\n      }\n\n      this.loading = true;\n      console.log(\"fetchFormats yt_url: \" + this.yt_url);\n      try {\n        const response = await axios.get('http://localhost:3001/get-formats', {\n          params: { url: this.yt_url }\n        });\n        this.videoData = response.data; // 保存返回的格式信息\n        this.loading = false; \n        console.log(\"fetchFormats this.videoData: \" + this.videoData);\n      } catch (error) {\n        console.error('获取格式失败:', error);\n      }\n    },\n    // async ytDownlaodTest(){\n    //   if (!this.yt_url) {\n    //     alert('请输入有效的 YouTube 视频 URL');\n    //     return;\n    //   }\n    //   const videoStream = ytdl(this.yt_url);\n    //   videoStream.pipe(fs.createWriteStream('video.mp4'));\n    //   videoStream.on('end',()=>{\n    //       console.log(\"downlaod ==========\");\n    //   });\n    // }\n  }\n}\n</script>\n\n\n<style scoped>\n/* 全局样式 */\n.main-content {\n  text-align: center;\n  font-family: Arial, sans-serif;\n  padding: 20px;\n}\n\n.converter-container {\n  padding: 40px 20px;\n}\n\n.converter-container-tip {\n  font-size: 12px;\n  white-space: pre-line;\n  margin-top: 30px;\n}\n\n.icon-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.icon {\n  width: 285px;\n  height: auto;\n}\n\n.title {\n  font-size: 32px;\n  font-weight: bold;\n  color: #113b92;\n}\n\n.description {\n  font-size: 16px;\n  color: #555;\n  margin: 10px 0 20px;\n}\n\n/* 最外层容器居中 */\n.container {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n/* 输入框和按钮的整体外层 */\n.input-wrapper {\n  display: flex;\n  align-items: center;\n  border-radius: 8px;\n  overflow: hidden;\n  width: 100%;\n  max-width: 500px; /* 最大宽度，防止过宽 */\n  height: 60px; /* 高度统一 */\n}\n\n/* 输入框样式 */\n.input-box {\n  flex: 1; /* 填满剩余空间 */\n  padding: 12px;\n  border: none;\n  outline: none;\n  font-size: 1em;\n  background-color: #f1f1f1;\n  color: #333;\n  height: 100%; /* 保证输入框高度与父容器一致 */\n}\n\n/* 下载按钮样式 */\n.download-button2 {\n  background-color: #027AFF;\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  height: 100%; /* 保证按钮高度与输入框一致 */\n  padding: 0 20px; /* 左右内边距 */\n  border-radius: 8px;\n}\n\n/* 按钮 hover 样式 */\n.download-button2:hover {\n  background-color: #027AFF;\n}\n\n.converter-container-tip {\n  font-size: 12px;\n  margin-top: 20px;\n}\n\n.container2 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.video-card {\n  background: #f1f1f1;\n  padding: 20px;\n  border-radius: 10px;\n  width: 100%;\n  max-width: 600px;\n}\n\n.video-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.thumbnail {\n  width: 120px;\n  height: 80px;\n  border-radius: 5px;\n  margin-right: 10px;\n}\n\n.title {\n  font-size: 16px;\n  font-weight: bold;\n  flex-grow: 1;\n}\n\n.formats-title {\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.formats-title-tip {\n  font-size: 12px;\n  margin-top: -10px;\n}\n\n.formats-list {\n  margin-top: 20px;\n}\n\n.format-item {\n  display: flex;\n  align-items: center; /* 垂直居中 */\n  background: #ffffff;\n  padding: 16px;\n  border-radius: 5px;\n  margin-bottom: 16px;\n  justify-content: space-between; /* 图标和内容之间保持间距 */\n}\n\n.download-icon {\n  font-size: 36px;\n  margin-right: 10px;\n}\n\n.format-details {\n  display: flex;\n  flex-direction: column; /* 垂直排列内容 */\n  align-items: flex-start; /* 让文本居左 */\n  flex-grow: 1; /* 使format-details占据剩余空间 */\n  justify-content: center; /* 保证内容垂直居中 */\n  text-align: left;\n}\n\n.download-link {\n  text-decoration: none;\n  color: #333;\n  font-weight: bold;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.download-link:hover {\n  text-decoration: underline;\n}\n\n.format-info {\n  font-size: 12px;\n  color: #666;\n  margin-top: 2px;\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 768px) {\n  /* 移动端：输入框和按钮纵向排列 */\n  .input-wrapper {\n    flex-direction: column; /* 输入框和按钮纵向排列 */\n    width: 100%; /* 宽度充满屏幕 */\n    height: auto; /* 使容器的高度适应内容 */\n  }\n\n  .input-box {\n    width: 100%;\n    margin-bottom: 10px; /* 输入框和按钮之间的间距 */\n    padding: 18px;\n  }\n\n  .download-button2 {\n    width: 160px; /* 按钮在小屏幕上占满宽度 */\n    margin-top: 10px; /* 按钮与输入框之间的间距 */\n    padding: 16px 0; /* 增加按钮的高度 */\n  }\n\n  .video-card {\n    width: 100%;\n    max-width: none;\n  }\n\n  .formats-list {\n    width: 100%;\n  }\n\n  .format-item {\n    align-items: flex-start; /* 确保所有内容都对齐 */\n    text-align: left;\n  }\n\n  .download-icon {\n    margin-bottom: 10px; /* 图标和内容之间的间距 */\n  }\n\n  .format-details {\n    align-items: flex-start; /* 让文本靠左 */\n    width: 100%; /* 保证格式信息区占据剩余空间 */\n  }\n\n  .download-link {\n    font-size: 14px;\n  }\n\n  .format-info {\n    font-size: 12px;\n  }\n  \n  .icon {\n  width: 185px;\n  height: auto;\n}\n}\n\n/* Web端样式 */\n@media screen and (min-width: 769px) {\n  .container {\n    justify-content: center;\n  }\n\n  .input-wrapper {\n    width: 44%;\n  }\n}\n\n\n.loading-indicator {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.loading-indicator .bar {\n  width: 8px;\n  height: 30px;\n  margin: 0 3px;\n  background-color: #1A3B8C;\n  animation: loadingAnimation 1.2s infinite;\n}\n\n.loading-indicator .bar:nth-child(1) {\n  animation-delay: 0s;\n}\n.loading-indicator .bar:nth-child(2) {\n  animation-delay: 0.2s;\n}\n.loading-indicator .bar:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes loadingAnimation {\n  0%, 80%, 100% {\n    transform: scaleY(0.4);\n  }\n  40% {\n    transform: scaleY(1);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}