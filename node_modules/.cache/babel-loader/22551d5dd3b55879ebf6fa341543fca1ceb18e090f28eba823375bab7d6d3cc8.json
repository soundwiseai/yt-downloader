{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"how-to-convert\"\n};\nconst _hoisted_2 = {\n  class: \"steps\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  class: \"step-text\"\n};\nconst _hoisted_5 = {\n  class: \"step-number\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"title\"\n  }, \"How to Convert YouTube Video to MP4\", -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n    class: \"description\"\n  }, \" Imagine being on a long flight or in a remote area with no internet access. Streaming your favorite video becomes impossible, right? That’s where offline viewing saves the day. By downloading videos in advance, you can enjoy uninterrupted entertainment anytime, anywhere. A YouTube to MP4 converter makes this process seamless. It lets you download YouTube videos quickly and efficiently. \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.steps, (step, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"step\"\n    }, [_createElementVNode(\"img\", {\n      src: step.image,\n      alt: step.title,\n      class: \"step-image\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"p\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, \"Step \" + _toDisplayString(index + 1) + \".\", 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(step.title), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","steps","step","index","key","src","image","alt","title","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_createTextVNode"],"sources":["/Users/jc/vue_workspace/youtube/yt-downloader/src/components/VedioConvertDeps.vue"],"sourcesContent":["<template>\n    <section class=\"how-to-convert\">\n      <h2 class=\"title\">How to Convert YouTube Video to MP4</h2>\n      <p class=\"description\">\n        Imagine being on a long flight or in a remote area with no internet access. Streaming your favorite video becomes impossible, right? \n        That’s where offline viewing saves the day. By downloading videos in advance, you can enjoy uninterrupted entertainment anytime, anywhere. \n        A YouTube to MP4 converter makes this process seamless. It lets you download YouTube videos quickly and efficiently.\n      </p>\n      \n      <div class=\"steps\">\n        <div v-for=\"(step, index) in steps\" :key=\"index\" class=\"step\">\n          <img :src=\"step.image\" :alt=\"step.title\" class=\"step-image\"/>\n          <p class=\"step-text\">\n            <span class=\"step-number\">Step {{ index + 1 }}.</span> {{ step.title }}\n          </p>\n        </div>\n      </div>\n    </section>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        steps: [\n          { image: require(\"@/assets/yt_convert_deps1.png\"), title: \"Copy the YouTube Video URL\" },\n          { image: require(\"@/assets/yt_convert_deps2.png\"), title: \"Directly click on the ‘Download’ button\" },\n          { image: require(\"@/assets/yt_convert_deps3.png\"), title: \"Wait for minutes and save the video\" }\n        ]\n      };\n    }\n  };\n  </script>\n  <style scoped>\n  .how-to-convert {\n    text-align: center;\n    max-width: 90%;\n    margin: auto;\n    padding: 20px 20px;\n  }\n  \n  .title {\n    font-size: 2rem;\n    font-weight: bold;\n    color: #1A3B8C;\n    margin-bottom: 15px;\n  }\n  \n  .description {\n    font-size: 0.9rem;\n    color: #555;\n    width: 78%;\n    margin: auto;\n    line-height: 1.6;\n  }\n  \n  .steps {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 40px;\n    gap: 20px;\n    flex-wrap: wrap; /* Allow wrapping on small screens */\n  }\n  \n  .step {\n    flex: 1 1 30%; /* Ensures each step takes 30% width on larger screens */\n    text-align: center;\n    margin-bottom: 30px; /* Adds spacing between steps */\n  }\n  \n  .step-image {\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px;\n  }\n  \n  .step-text {\n    font-size: 1rem;\n    color: #222;\n    margin-top: 20px;\n  }\n  \n  .step-number {\n    font-weight: bold;\n    color: #0d1c44;\n  }\n  \n  /* Mobile adjustments */\n  @media (max-width: 768px) {\n    .steps {\n      flex-direction: column; /* Stack items vertically on smaller screens */\n    }\n  \n    .step {\n      flex: 1 1 100%; /* Take full width */\n      margin-bottom: 15px;\n    }\n  \n    .title {\n      font-size: 1.5rem;\n    }\n  \n    .description {\n      font-size: 0.85rem;\n      width: 90%;\n    }\n  \n    .step-text {\n      font-size: 0.95rem;\n    }\n  }\n  </style>"],"mappings":";;EACaA,KAAK,EAAC;AAAgB;;EAQxBA,KAAK,EAAC;AAAO;mBATxB;;EAYaA,KAAK,EAAC;AAAW;;EACZA,KAAK,EAAC;AAAa;;uBAZjCC,mBAAA,CAgBU,WAhBVC,UAgBU,G,0BAfRC,mBAAA,CAA0D;IAAtDH,KAAK,EAAC;EAAO,GAAC,qCAAmC,sB,0BACrDG,mBAAA,CAII;IAJDH,KAAK,EAAC;EAAa,GAAC,wYAIvB,sBAEAG,mBAAA,CAOM,OAPNC,UAOM,I,kBANJH,mBAAA,CAKMI,SAAA,QAfdC,WAAA,CAUqCC,KAAA,CAAAC,KAAK,EAV1C,CAUqBC,IAAI,EAAEC,KAAK;yBAAxBT,mBAAA,CAKM;MAL+BU,GAAG,EAAED,KAAK;MAAEV,KAAK,EAAC;QACrDG,mBAAA,CAA6D;MAAvDS,GAAG,EAAEH,IAAI,CAACI,KAAK;MAAGC,GAAG,EAAEL,IAAI,CAACM,KAAK;MAAEf,KAAK,EAAC;4BAXzDgB,UAAA,GAYUb,mBAAA,CAEI,KAFJc,UAEI,GADFd,mBAAA,CAAsD,QAAtDe,UAAsD,EAA5B,OAAK,GAAAC,gBAAA,CAAGT,KAAK,QAAO,GAAC,iBAb3DU,gBAAA,CAakE,GAAC,GAAAD,gBAAA,CAAGV,IAAI,CAACM,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}