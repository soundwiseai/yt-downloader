{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/yt_icon.png';\nconst _hoisted_1 = {\n  class: \"main-content\"\n};\nconst _hoisted_2 = {\n  class: \"converter-container\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"input-wrapper\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"container2\"\n};\nconst _hoisted_6 = {\n  class: \"video-card\"\n};\nconst _hoisted_7 = {\n  class: \"video-header\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"title\"\n};\nconst _hoisted_10 = {\n  class: \"formats-list\"\n};\nconst _hoisted_11 = {\n  class: \"format-details\"\n};\nconst _hoisted_12 = [\"href\"];\nconst _hoisted_13 = {\n  class: \"format-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 图标 \"), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"YouTube Icon\",\n    class: \"icon\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 标题 \"), _cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"YouTube to MP4 Converter\", -1 /* HOISTED */)), _createCommentVNode(\" 描述 \"), _cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n    class: \"description\"\n  }, \" Paste URL and Quick Convert YouTube to MP4. Always free, always works, no ads. \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.yt_url = $event),\n    placeholder: \"https://www.youtube.com/watch?v=...\",\n    class: \"input-box\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.yt_url]]), _createElementVNode(\"button\", {\n    class: \"download-button2\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchFormats && $options.fetchFormats(...args))\n  }, \"DOWNLOAD\")])]), _cache[5] || (_cache[5] = _createElementVNode(\"p\", {\n    class: \"converter-container-tip\"\n  }, \"Please be mindful of copyright when downloading content. This tool isn't designed for downloading copyrighted music. \", -1 /* HOISTED */))]), $data.videoData && $data.videoData?.title ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n    src: $data.videoData.thumbnail,\n    class: \"thumbnail\",\n    alt: \"Thumbnail\"\n  }, null, 8 /* PROPS */, _hoisted_8), _createElementVNode(\"h2\", _hoisted_9, _toDisplayString($data.videoData.title), 1 /* TEXT */)]), _cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    class: \"formats-title\"\n  }, \"All Formats\", -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"formats-title-tip\"\n  }, \"Click to save\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.videoData.formats, format => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: format.format_id,\n      class: \"format-item\"\n    }, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n      class: \"download-icon\"\n    }, \"⬇️\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"a\", {\n      href: format.url,\n      class: \"download-link\",\n      target: \"_blank\"\n    }, _toDisplayString($data.videoData.title) + \".\" + _toDisplayString(format.ext), 9 /* TEXT, PROPS */, _hoisted_12), _createElementVNode(\"span\", _hoisted_13, _toDisplayString(format.resolution || \"Audio Only\") + \" • \" + _toDisplayString((format.filesize / (1024 * 1024)).toFixed(2)) + \" MB\", 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","src","alt","_hoisted_3","_hoisted_4","type","_cache","$event","$data","yt_url","placeholder","onClick","args","$options","fetchFormats","videoData","title","_hoisted_5","_hoisted_6","_hoisted_7","thumbnail","_hoisted_8","_hoisted_9","_toDisplayString","_hoisted_10","_Fragment","_renderList","formats","format","format_id","_hoisted_11","href","url","target","ext","_hoisted_12","_hoisted_13","resolution","filesize","toFixed"],"sources":["/Users/jc/vue_workspace/youtube/yt-downloader/src/components/MainContent.vue"],"sourcesContent":["<template>\n  <main class=\"main-content\">\n    <div class=\"converter-container\">\n      <!-- 图标 -->\n      <div class=\"icon-container\">\n        <img src=\"@/assets/yt_icon.png\" alt=\"YouTube Icon\" class=\"icon\" />\n      </div>\n\n      <!-- 标题 -->\n      <h1 class=\"title\">YouTube to MP4 Converter</h1>\n\n      <!-- 描述 -->\n      <p class=\"description\">\n        Paste URL and Quick Convert YouTube to MP4. Always free, always works, no ads.\n      </p>\n\n      <div class=\"container\">\n        <div class=\"input-wrapper\">\n          <input type=\"text\" v-model=\"yt_url\" placeholder=\"https://www.youtube.com/watch?v=...\" class=\"input-box\" />\n          <button class=\"download-button2\" @click=\"fetchFormats\">DOWNLOAD</button>\n        </div>\n      </div>\n\n      <p class=\"converter-container-tip\">Please be mindful of copyright when downloading content. This tool isn't designed for downloading copyrighted music. </p>\n    </div>\n\n    <div class=\"container2\" v-if=\"videoData && videoData?.title\">\n      <div class=\"video-card\">\n        <div class=\"video-header\">\n          <img :src=\"videoData.thumbnail\" class=\"thumbnail\" alt=\"Thumbnail\">\n          <h2 class=\"title\">{{ videoData.title }}</h2>\n        </div>\n        <h3 class=\"formats-title\">All Formats</h3>\n        <p class=\"formats-title-tip\">Click to save</p>\n        <div class=\"formats-list\">\n          <div v-for=\"format in videoData.formats\" :key=\"format.format_id\" class=\"format-item\">\n            <span class=\"download-icon\">⬇️</span>\n            <div class=\"format-details\">\n              <a :href=\"format.url\" class=\"download-link\" target=\"_blank\">\n                {{ videoData.title }}.{{ format.ext }}\n              </a>\n              <span class=\"format-info\">{{ format.resolution || \"Audio Only\" }} • {{ (format.filesize / (1024 * 1024)).toFixed(2) }} MB</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      yt_url: 'https://www.youtube.com/watch?v=39olCJI2TgQ', // 用来存储 YouTube 链接\n      videoData: {\n      }\n    };\n  },\n  methods: {\n    download() {\n      alert(`Starting download for: ${this.url}`);\n    },\n    async downloadFile(link) {\n      try {\n        // 向后端发送请求下载文件\n        const response = await axios.get(link, {\n          responseType: 'blob'  // 设置返回类型为二进制流\n        });\n\n        // 创建一个临时链接，触发浏览器下载\n        const blob = response.data;\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const linkElement = document.createElement('a');\n        linkElement.href = downloadUrl;\n        linkElement.download = 'video.mp4';  // 可根据需要修改文件名\n        linkElement.click();\n\n        // 释放 URL 对象\n        window.URL.revokeObjectURL(downloadUrl);\n      } catch (error) {\n        console.error('下载失败:', error);\n        alert('下载失败，请稍后再试');\n      }\n    },\n\n    async fetchFormats() {\n      if (!this.yt_url) {\n        alert('请输入有效的 YouTube 视频 URL');\n        return;\n      }\n\n      console.log(\"fetchFormats yt_url: \" + this.yt_url);\n      try {\n        const response = await axios.get('http://localhost:3001/get-formats', {\n          params: { url: this.yt_url }\n        });\n        this.videoData = response.data; // 保存返回的格式信息\n        console.log(\"fetchFormats this.videoData: \" + this.videoData);\n      } catch (error) {\n        console.error('获取格式失败:', error);\n      }\n    },\n    // async ytDownlaodTest(){\n    //   if (!this.yt_url) {\n    //     alert('请输入有效的 YouTube 视频 URL');\n    //     return;\n    //   }\n    //   const videoStream = ytdl(this.yt_url);\n    //   videoStream.pipe(fs.createWriteStream('video.mp4'));\n    //   videoStream.on('end',()=>{\n    //       console.log(\"downlaod ==========\");\n    //   });\n    // }\n  }\n}\n</script>\n\n<style scoped>\n.main-content {\n  text-align: center;\n}\n\n.converter-container {\n  text-align: center;\n  padding: 40px 20px;\n}\n\n.converter-container-tip{\n  font-size: 12px;\n  white-space: pre-line;\n  margin-top: 30px;\n}\n\n/* 图标 */\n.icon-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.icon {\n  width: 285px;\n  height: auto;\n}\n\n/* 标题 */\n.title {\n  font-size: 32px;\n  font-weight: bold;\n  color: #113b92;\n}\n\n/* 描述 */\n.description {\n  font-size: 16px;\n  color: #555;\n  margin: 10px 0 20px;\n}\n\n/* 最外层居中容器 */\n.container {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n/* 输入框和按钮的整体外层 */\n.input-wrapper {\n  display: flex;\n  align-items: center;\n  background-color: #f1f1f1;\n  border-radius: 8px;\n  overflow: hidden;\n  /* 避免圆角问题 */\n  width: 44%;\n  min-width: 300px;\n  /* 防止过窄 */\n  height: 60px;\n}\n\n/* 输入框样式 */\n.input-box {\n  flex: 1;\n  padding: 12px;\n  border: none;\n  outline: none;\n  font-size: 1em;\n  color: #333;\n  margin: 0px 0px 0px 10px;\n}\n\n/* 下载按钮样式 */\n.download-button2 {\n  background-color: #027AFF;\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  height: 54px;\n  margin: 4px;\n  padding: 20px;\n  border-radius: 8px;\n}\n\n.download-button2:hover {\n  background-color: #027AFF;\n}\n\n.download-button {\n  background-color: #3b82f6;\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  transition: background 0.3s;\n  height: 56px;\n  margin: 4px;\n}\n\n.download-button:hover {\n  background-color: #2563eb;\n}\n\n\n.download-list {\n  margin-top: 40px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  width: 30%;\n  /* 设置宽度为输入框的 2/3 */\n  margin: 40px auto;\n  /* 水平居中 */\n}\n\n.download-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 15px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.download-item .item-info p {\n  margin: 0;\n  font-size: 1rem;\n  color: #333;\n}\n\n.download-button {\n  padding: 8px 16px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.download-button:hover {\n  background-color: #218838;\n}\n\n.container2 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n}\n\n.video-card {\n  background: #f1f1f1;\n  padding: 20px;\n  border-radius: 10px;\n  width: 100%;\n  max-width: 500px;\n}\n\n.video-header {\n  display: flex;\n}\n\n.thumbnail {\n  width: 120px;\n  height: 80px;\n  border-radius: 5px;\n  margin-right: 10px;\n}\n\n.title {\n  font-size: 16px;\n  font-weight: bold;\n  flex-grow: 1;\n}\n\n.formats-title {\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.formats-title-tip{\n  font-size: 12px;\n  margin-top:  -10px;\n}\n\n.formats-list {\n  margin-top: 20px;\n}\n\n.format-item {\n  display: flex;\n  align-items: center;\n  background: #ffffff;\n  padding: 16px;\n  border-radius: 5px;\n  margin-bottom: 16px;\n}\n\n.download-icon {\n  font-size: 36px;\n  margin-right: 10px;\n}\n\n.format-details {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.download-link {\n  text-decoration: none;\n  color: #333;\n  font-weight: bold;\n    display: -webkit-box; /* 必须使用的属性 */\n  -webkit-line-clamp: 2; /* 最大行数 */\n  -webkit-box-orient: vertical; /* 设置为垂直方向 */\n  overflow: hidden; /* 超出部分隐藏 */\n  text-overflow: ellipsis; /* 溢出时显示省略号 */\n}\n\n.download-link:hover {\n  text-decoration: underline;\n}\n\n.format-info {\n  font-size: 12px;\n  color: #666;\n  margin-top: 2px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}